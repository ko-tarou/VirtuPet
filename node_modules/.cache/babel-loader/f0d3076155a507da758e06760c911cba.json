{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazuk\\\\Documents\\\\sumapuro\\\\hakkason\\\\VirtuPet\\\\src\\\\pages\\\\select.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nconst Select = () => {\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // Three.jsのシーン、カメラ、レンダラーの設定\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // 環境光\n    const light = new THREE.AmbientLight(0xffffff);\n    scene.add(light);\n\n    // モデルの読み込み\n    const loader = new GLTFLoader();\n    loader.load('/models/.glb',\n    // エクスポートしたモデルのパス\n    gltf => {\n      const model = gltf.scene;\n      scene.add(model);\n\n      // アニメーションを再生\n      const mixer = new THREE.AnimationMixer(model);\n      gltf.animations.forEach(clip => {\n        mixer.clipAction(clip).play();\n      });\n\n      // アニメーションの更新\n      const clock = new THREE.Clock();\n      const animate = () => {\n        requestAnimationFrame(animate);\n        const delta = clock.getDelta();\n        mixer.update(delta);\n        renderer.render(scene, camera);\n      };\n      animate();\n    }, undefined, error => {\n      console.error('An error occurred while loading the model:', error);\n    });\n    camera.position.z = 5;\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  });\n};\nexport default Select;","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","Select","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","light","AmbientLight","add","loader","load","gltf","model","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","clock","Clock","animate","requestAnimationFrame","delta","getDelta","update","render","undefined","error","console","position","z","removeChild","createElement","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/nazuk/Documents/sumapuro/hakkason/VirtuPet/src/pages/select.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nconst Select = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Three.jsのシーン、カメラ、レンダラーの設定\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // 環境光\r\n    const light = new THREE.AmbientLight(0xffffff);\r\n    scene.add(light);\r\n\r\n    // モデルの読み込み\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n      '/models/.glb', // エクスポートしたモデルのパス\r\n      (gltf) => {\r\n        const model = gltf.scene;\r\n        scene.add(model);\r\n\r\n        // アニメーションを再生\r\n        const mixer = new THREE.AnimationMixer(model);\r\n        gltf.animations.forEach((clip) => {\r\n          mixer.clipAction(clip).play();\r\n        });\r\n\r\n        // アニメーションの更新\r\n        const clock = new THREE.Clock();\r\n        const animate = () => {\r\n          requestAnimationFrame(animate);\r\n          const delta = clock.getDelta();\r\n          mixer.update(delta);\r\n          renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('An error occurred while loading the model:', error);\r\n      }\r\n    );\r\n\r\n    camera.position.z = 5;\r\n\r\n    return () => {\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef}></div>;\r\n};\r\n\r\nexport default Select;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAElE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,KAAK,GAAG,IAAIJ,KAAK,CAACK,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIN,KAAK,CAACO,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIX,KAAK,CAACY,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDP,QAAQ,CAACW,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,KAAK,GAAG,IAAIjB,KAAK,CAACkB,YAAY,CAAC,QAAQ,CAAC;IAC9Cd,KAAK,CAACe,GAAG,CAACF,KAAK,CAAC;;IAEhB;IACA,MAAMG,MAAM,GAAG,IAAInB,UAAU,CAAC,CAAC;IAC/BmB,MAAM,CAACC,IAAI,CACT,cAAc;IAAE;IACfC,IAAI,IAAK;MACR,MAAMC,KAAK,GAAGD,IAAI,CAAClB,KAAK;MACxBA,KAAK,CAACe,GAAG,CAACI,KAAK,CAAC;;MAEhB;MACA,MAAMC,KAAK,GAAG,IAAIxB,KAAK,CAACyB,cAAc,CAACF,KAAK,CAAC;MAC7CD,IAAI,CAACI,UAAU,CAACC,OAAO,CAAEC,IAAI,IAAK;QAChCJ,KAAK,CAACK,UAAU,CAACD,IAAI,CAAC,CAACE,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;;MAEF;MACA,MAAMC,KAAK,GAAG,IAAI/B,KAAK,CAACgC,KAAK,CAAC,CAAC;MAC/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;QACpBC,qBAAqB,CAACD,OAAO,CAAC;QAC9B,MAAME,KAAK,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC;QAC9BZ,KAAK,CAACa,MAAM,CAACF,KAAK,CAAC;QACnBxB,QAAQ,CAAC2B,MAAM,CAAClC,KAAK,EAAEE,MAAM,CAAC;MAChC,CAAC;MACD2B,OAAO,CAAC,CAAC;IACX,CAAC,EACDM,SAAS,EACRC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACpE,CACF,CAAC;IAEDlC,MAAM,CAACoC,QAAQ,CAACC,CAAC,GAAG,CAAC;IAErB,OAAO,MAAM;MACXxC,QAAQ,CAACW,OAAO,CAAC8B,WAAW,CAACjC,QAAQ,CAACK,UAAU,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOnB,KAAA,CAAAgD,aAAA;IAAKC,GAAG,EAAE3C,QAAS;IAAA4C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC;AACnC,CAAC;AAED,eAAelD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}