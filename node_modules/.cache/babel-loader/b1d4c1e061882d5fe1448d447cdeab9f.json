{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkota\\\\project_k\\\\hackthon\\\\Web\\\\hackthon2024_11_30\\\\VirtuPet\\\\src\\\\pages\\\\veiw.jsx\";\nimport React, { useState } from 'react';\nimport '../pages/styles/veiw.css'; // CSSファイルをインポート\n\nconst View = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [animalSize, setAnimalSize] = useState(1.0);\n\n  // 動物の設定をサーバーに送信する関数\n  const updateAnimalSettings = async settings => {\n    try {\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n      });\n      if (response.ok) {\n        const result = await response.json();\n      } else {\n        const errorResult = await response.json();\n      }\n    } catch (error) {}\n  };\n\n  // 表示設定の変更時に処理\n  const handleVisibilityChange = e => {\n    const newVisibility = e.target.checked;\n    setIsVisible(newVisibility);\n    updateAnimalSettings({\n      is_visible: newVisibility,\n      size: animalSize\n    }); // 即時送信\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"option1\",\n    name: \"option1\",\n    type: \"checkbox\",\n    onChange: handleVisibilityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"option1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Windows\\u8868\\u793A\\u3000\")), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Fira+Sans\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    width: \"100%\",\n    height: \"100%\",\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: \"videos/test.mp4\",\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), \"\\u304A\\u4F7F\\u3044\\u306E\\u30D6\\u30E9\\u30A6\\u30B6\\u306F\\u52D5\\u753B\\u30BF\\u30B0\\u306B\\u5BFE\\u5FDC\\u3057\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\"))));\n};\nexport default View;","map":{"version":3,"names":["React","useState","View","isVisible","setIsVisible","animalSize","setAnimalSize","updateAnimalSettings","settings","response","fetch","method","headers","body","JSON","stringify","ok","result","json","errorResult","error","handleVisibilityChange","e","newVisibility","target","checked","is_visible","size","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","class","id","name","type","onChange","for","href","rel","width","height","autoPlay","loop","muted","src"],"sources":["C:/Users/tkota/project_k/hackthon/Web/hackthon2024_11_30/VirtuPet/src/pages/veiw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../pages/styles/veiw.css'; // CSSファイルをインポート\r\n\r\nconst View = () => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [animalSize, setAnimalSize] = useState(1.0);\r\n\r\n  // 動物の設定をサーバーに送信する関数\r\n  const updateAnimalSettings = async (settings) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(settings)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n      } else {\r\n        const errorResult = await response.json();\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  // 表示設定の変更時に処理\r\n  const handleVisibilityChange = (e) => {\r\n    const newVisibility = e.target.checked;\r\n    setIsVisible(newVisibility);\r\n    updateAnimalSettings({ is_visible: newVisibility, size: animalSize }); // 即時送信\r\n  };\r\n\r\n\r\n\r\n  return (\r\n  \r\n      <div className=\"view-container\">\r\n        <div className=\"layout\">\r\n          <div class=\"inputGroup\">\r\n            <input id=\"option1\" name=\"option1\" type=\"checkbox\" onChange={handleVisibilityChange}/>\r\n            <label for=\"option1\">Windows表示　</label>\r\n          </div>\r\n          <link href=\"https://fonts.googleapis.com/css?family=Fira+Sans\" rel=\"stylesheet\"></link>\r\n\r\n          <div className=\"video-container\">\r\n            <video width=\"100%\" height=\"100%\" autoPlay loop muted>\r\n              <source src=\"videos/test.mp4\" type=\"video/mp4\" />\r\n              お使いのブラウザは動画タグに対応していません。\r\n            </video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}