{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazuk\\\\Documents\\\\sumapuro\\\\hakkason\\\\VirtuPet\\\\src\\\\pages\\\\home.jsx\";\nimport React, { useState } from 'react';\nimport '../pages/styles/animal.css';\nconst Home = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"VirtuPet\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"\\u30ED\\u30B0\\u30A4\\u30F3\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\u4F7F\\u3044\\u65B9\"));\n};\n\n//   const [isVisible, setIsVisible] = useState(true);\n//   const [animalSize, setAnimalSize] = useState(1.0);  // 新しいサイズの状態を追加\n\n//   // 動物の表示設定をサーバーに送信する関数\n//   const updateAnimalSettings = async () => {\n//     const response = await fetch('http://localhost:5000/set_animal_settings', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ is_visible: isVisible, size: animalSize }) // sizeも送信\n//     });\n\n//     const result = await response.json();\n//     console.log(result.status, result.settings);\n//   };\n\n//   // チェックボックスの変更を処理\n//   const handleVisibilityChange = (e) => {\n//     setIsVisible(e.target.checked);\n//     updateAnimalSettings();  // 表示状態をサーバーに即時送信\n//   };\n\n//   // サイズ入力の変更を処理\n//   const handleSizeChange = (e) => {\n//     setAnimalSize(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1>ホームページ</h1>\n//       <label>\n//         表示する:\n//         <input \n//           type=\"checkbox\" \n//           checked={isVisible} \n//           onChange={handleVisibilityChange} \n//         />\n//       </label>\n//       <div>\n//         <label>\n//           画像の大きさ:\n//           <input \n//             type=\"number\" \n//             min=\"0.5\" \n//             max=\"3.0\" \n//             step=\"0.1\" \n//             value={animalSize} \n//             onChange={handleSizeChange} \n//           />\n//         </label>\n//         <button onClick={updateAnimalSettings}>サイズを更新</button>\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default Home;","map":{"version":3,"names":["React","useState","Home","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","class"],"sources":["C:/Users/nazuk/Documents/sumapuro/hakkason/VirtuPet/src/pages/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../pages/styles/animal.css';\r\n\r\nconst Home = () => {\r\n\r\n     return (\r\n    <div className=\"container\">\r\n      <h1>VirtuPet</h1>\r\n      <button class=\"btn1\">ログイン</button>\r\n      <button class=\"btn2\">使い方</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n//   const [isVisible, setIsVisible] = useState(true);\r\n//   const [animalSize, setAnimalSize] = useState(1.0);  // 新しいサイズの状態を追加\r\n\r\n//   // 動物の表示設定をサーバーに送信する関数\r\n//   const updateAnimalSettings = async () => {\r\n//     const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({ is_visible: isVisible, size: animalSize }) // sizeも送信\r\n//     });\r\n\r\n//     const result = await response.json();\r\n//     console.log(result.status, result.settings);\r\n//   };\r\n  \r\n\r\n//   // チェックボックスの変更を処理\r\n//   const handleVisibilityChange = (e) => {\r\n//     setIsVisible(e.target.checked);\r\n//     updateAnimalSettings();  // 表示状態をサーバーに即時送信\r\n//   };\r\n\r\n//   // サイズ入力の変更を処理\r\n//   const handleSizeChange = (e) => {\r\n//     setAnimalSize(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ホームページ</h1>\r\n//       <label>\r\n//         表示する:\r\n//         <input \r\n//           type=\"checkbox\" \r\n//           checked={isVisible} \r\n//           onChange={handleVisibilityChange} \r\n//         />\r\n//       </label>\r\n//       <div>\r\n//         <label>\r\n//           画像の大きさ:\r\n//           <input \r\n//             type=\"number\" \r\n//             min=\"0.5\" \r\n//             max=\"3.0\" \r\n//             step=\"0.1\" \r\n//             value={animalSize} \r\n//             onChange={handleSizeChange} \r\n//           />\r\n//         </label>\r\n//         <button onClick={updateAnimalSettings}>サイズを更新</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AAEnC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEd,oBACDF,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBV,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBV,KAAA,CAAAG,aAAA;IAAQQ,KAAK,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAAY,CAAC,eAClCV,KAAA,CAAAG,aAAA;IAAQQ,KAAK,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAW,CAC7B,CAAC;AAEV,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeR,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}