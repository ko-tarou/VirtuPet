{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazuk\\\\Documents\\\\sumapuro\\\\hakkason\\\\VirtuPet\\\\src\\\\pages\\\\select.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport '../pages/styles/select.css'; // CSSファイルをインポート\n\nconst Select = () => {\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const mountNode = mountRef.current;\n    // シーン、カメラ、レンダラーの設定\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 0.1, 1000);\n    // **alpha: trueを指定してレンダラーを初期化**\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    // **背景色の透明度を設定**\n    renderer.setClearColor(0x000000, 0);\n    mountNode.appendChild(renderer.domElement);\n    // ライトの追加\n    const light = new THREE.AmbientLight(0xffffff); // 環境光\n    scene.add(light);\n    // GLTFLoaderを作成\n    const loader = new GLTFLoader();\n    // **1つ目のモデル（inudake move.glb）をロード**\n    loader.load('/models/inudake move big.glb',\n    // ファイルパス\n    gltf => {\n      const model = gltf.scene;\n      const radius = 5; // モデルからカメラまでの距離\n      const angle = 60 * (Math.PI / 180); // 45度をラジアンに変換\n      model.rotation.y = radius * Math.sin(angle); // 適切な距離を維持\n      model.position.x = 0; // ペンギンの位置を少し右に移動（必要に応じて調整）\n      camera.position.x = 0; // 必要に応じて調整\n\n      scene.add(model); // シーンに追加\n      // アニメーションの再生設定\n      const mixer = new THREE.AnimationMixer(model);\n      gltf.animations.forEach(clip => {\n        mixer.clipAction(clip).play();\n      });\n      // アニメーションを更新\n      const clock = new THREE.Clock();\n      const animate = () => {\n        requestAnimationFrame(animate);\n        const delta = clock.getDelta();\n        mixer.update(delta);\n        renderer.render(scene, camera);\n      };\n      animate();\n    }, undefined, error => {\n      console.error('inudake move.glbの読み込みエラー:', error);\n    });\n    // **2つ目のモデル（pengin move.glb）をロード**\n    loader.load('/models/pengin move big.glb',\n    // ファイルパス\n    gltf => {\n      const model = gltf.scene;\n      const radius = 5; // モデルからカメラまでの距離\n      const angle = 45 * (Math.PI / 180);\n      const angle2 = 50 * (Math.PI / 180); // 45度をラジアンに変換\n      camera.position.y = radius * Math.sin(angle); // 度の高さ\n      model.rotation.y = radius * Math.sin(angle2); // 適切な距離を維持\n      model.position.x = 7; // ペンギンの位置を少し右に移動（必要に応じて調整）\n      camera.position.x = 0; // 必要に応じて調整\n      camera.lookAt(0, 0, 0); // モデルの中心を向く\n      scene.add(model); // シーンに追加\n      // アニメーションの再生設定\n      const mixer = new THREE.AnimationMixer(model);\n      gltf.animations.forEach(clip => {\n        mixer.clipAction(clip).play();\n      });\n      // アニメーションを更新\n      const clock = new THREE.Clock();\n      const animate = () => {\n        requestAnimationFrame(animate);\n        const delta = clock.getDelta();\n        mixer.update(delta);\n        renderer.render(scene, camera);\n      };\n      animate();\n    }, undefined, error => {\n      console.error('pengin move.glbの読み込みエラー:', error);\n    });\n\n    // **3つ目のモデル（kitune move.glb）をロード**\n    loader.load('/models/kitune move big.glb',\n    // ファイルパス\n    gltf => {\n      const model = gltf.scene;\n      const radius = 5; // モデルからカメラまでの距離\n      const angle = 45 * (Math.PI / 180);\n      const angle2 = 60 * (Math.PI / 180); // 45度をラジアンに変換\n      camera.position.y = radius * Math.sin(angle); // 度の高さ\n      model.rotation.y = radius * Math.sin(angle2); // 適切な距離を維持\n      model.position.x = -7; // ペンギンの位置を少し右に移動（必要に応じて調整）\n      camera.position.x = 0; // 必要に応じて調整\n\n      scene.add(model); // シーンに追加\n      // アニメーションの再生設定\n      const mixer = new THREE.AnimationMixer(model);\n      gltf.animations.forEach(clip => {\n        mixer.clipAction(clip).play();\n      });\n      // アニメーションを更新\n      const clock = new THREE.Clock();\n      const animate = () => {\n        requestAnimationFrame(animate);\n        const delta = clock.getDelta();\n        mixer.update(delta);\n        renderer.render(scene, camera);\n      };\n      animate();\n    }, undefined, error => {\n      console.error('kitune move.glbの読み込みエラー:', error);\n    });\n\n    // カメラの位置設定\n    camera.position.z = 20;\n    return () => {\n      mountNode.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-select\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    style: {\n      position: 'absolute',\n      top: '10px',\n      left: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chara1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"\\u304D\\u3064\\u306D\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    style: {\n      position: 'absolute',\n      top: '10px',\n      left: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chara2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"\\u3044\\u306C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    style: {\n      position: 'absolute',\n      top: '10px',\n      left: '190px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chara3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"\\u30DA\\u30F3\\u30AE\\u30F3\")), /*#__PURE__*/React.createElement(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Select;","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","Select","mountRef","mountNode","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","setClearColor","appendChild","domElement","light","AmbientLight","add","loader","load","gltf","model","radius","angle","Math","PI","rotation","y","sin","position","x","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","clock","Clock","animate","requestAnimationFrame","delta","getDelta","update","render","undefined","error","console","angle2","lookAt","z","removeChild","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","top","left","ref","width","height"],"sources":["C:/Users/nazuk/Documents/sumapuro/hakkason/VirtuPet/src/pages/select.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport '../pages/styles/select.css'; // CSSファイルをインポート\r\n\r\n\r\nconst Select = () => {\r\n  const mountRef = useRef(null);\r\n  useEffect(() => {\r\n    const mountNode = mountRef.current;\r\n    // シーン、カメラ、レンダラーの設定\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      30,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    // **alpha: trueを指定してレンダラーを初期化**\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    // **背景色の透明度を設定**\r\n    renderer.setClearColor(0x000000, 0);\r\n    mountNode.appendChild(renderer.domElement);\r\n    // ライトの追加\r\n    const light = new THREE.AmbientLight(0xffffff); // 環境光\r\n    scene.add(light);\r\n    // GLTFLoaderを作成\r\n    const loader = new GLTFLoader();\r\n    // **1つ目のモデル（inudake move.glb）をロード**\r\n    loader.load(\r\n      '/models/inudake move big.glb', // ファイルパス\r\n      (gltf) => {\r\n        const model = gltf.scene;\r\n        const radius = 5; // モデルからカメラまでの距離\r\n        const angle = 60 * (Math.PI / 180); // 45度をラジアンに変換\r\n        model.rotation.y = radius * Math.sin(angle); // 適切な距離を維持\r\n        model.position.x = 0; // ペンギンの位置を少し右に移動（必要に応じて調整）\r\n        camera.position.x = 0; // 必要に応じて調整\r\n        \r\n        scene.add(model); // シーンに追加\r\n        // アニメーションの再生設定\r\n        const mixer = new THREE.AnimationMixer(model);\r\n        gltf.animations.forEach((clip) => {\r\n          mixer.clipAction(clip).play();\r\n        });\r\n        // アニメーションを更新\r\n        const clock = new THREE.Clock();\r\n        const animate = () => {\r\n          requestAnimationFrame(animate);\r\n          const delta = clock.getDelta();\r\n          mixer.update(delta);\r\n          renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('inudake move.glbの読み込みエラー:', error);\r\n      }\r\n    );\r\n    // **2つ目のモデル（pengin move.glb）をロード**\r\n    loader.load(\r\n      '/models/pengin move big.glb', // ファイルパス\r\n            (gltf) => {\r\n        const model = gltf.scene;\r\n        const radius = 5; // モデルからカメラまでの距離\r\n        const angle = 45 * (Math.PI / 180);\r\n        const angle2 = 50 * (Math.PI / 180); // 45度をラジアンに変換\r\n        camera.position.y = radius * Math.sin(angle); // 度の高さ\r\n        model.rotation.y = radius * Math.sin(angle2); // 適切な距離を維持\r\n        model.position.x = 7; // ペンギンの位置を少し右に移動（必要に応じて調整）\r\n        camera.position.x = 0; // 必要に応じて調整\r\n        camera.lookAt(0, 0, 0); // モデルの中心を向く\r\n        scene.add(model); // シーンに追加\r\n        // アニメーションの再生設定\r\n        const mixer = new THREE.AnimationMixer(model);\r\n        gltf.animations.forEach((clip) => {\r\n          mixer.clipAction(clip).play();\r\n        });\r\n        // アニメーションを更新\r\n        const clock = new THREE.Clock();\r\n        const animate = () => {\r\n          requestAnimationFrame(animate);\r\n          const delta = clock.getDelta();\r\n          mixer.update(delta);\r\n          renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('pengin move.glbの読み込みエラー:', error);\r\n      }\r\n    );\r\n\r\n        // **3つ目のモデル（kitune move.glb）をロード**\r\n        loader.load(\r\n          '/models/kitune move big.glb', // ファイルパス\r\n            (gltf) => {\r\n            const model = gltf.scene;\r\n            const radius = 5; // モデルからカメラまでの距離\r\n            const angle = 45 * (Math.PI / 180);\r\n            const angle2 = 60 * (Math.PI / 180); // 45度をラジアンに変換\r\n            camera.position.y = radius * Math.sin(angle); // 度の高さ\r\n            model.rotation.y = radius * Math.sin(angle2); // 適切な距離を維持\r\n            model.position.x = -7; // ペンギンの位置を少し右に移動（必要に応じて調整）\r\n            camera.position.x = 0; // 必要に応じて調整\r\n            \r\n            scene.add(model); // シーンに追加\r\n            // アニメーションの再生設定\r\n            const mixer = new THREE.AnimationMixer(model);\r\n            gltf.animations.forEach((clip) => {\r\n              mixer.clipAction(clip).play();\r\n            });\r\n            // アニメーションを更新\r\n            const clock = new THREE.Clock();\r\n            const animate = () => {\r\n              requestAnimationFrame(animate);\r\n              const delta = clock.getDelta();\r\n              mixer.update(delta);\r\n              renderer.render(scene, camera);\r\n            };\r\n            animate();\r\n          },\r\n          undefined,\r\n          (error) => {\r\n            console.error('kitune move.glbの読み込みエラー:', error);\r\n          }\r\n        );\r\n\r\n\r\n    // カメラの位置設定\r\n    camera.position.z = 20;\r\n    return () => {\r\n      mountNode.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"container-select\" style={{ position: 'relative' }}>\r\n      <div className=\"button-container\" style={{ position: 'absolute', top: '10px', left: '10px' }}>\r\n        <button className=\"chara1\">きつね</button>\r\n      </div>\r\n      <div className=\"button-container\" style={{ position: 'absolute', top: '10px', left: '70px' }}>\r\n        <button className=\"chara2\">いぬ</button>\r\n      </div>\r\n      <div className=\"button-container\" style={{ position: 'absolute', top: '10px', left: '190px' }}>\r\n        <button className=\"chara3\">ペンギン</button>\r\n      </div>\r\n      <div ref={mountRef} style={{ width: '100vw', height: '100vh' }}></div>\r\n    </div>\r\n  );\r\n};\r\nexport default Select;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}