{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazuk\\\\Documents\\\\sumapuro\\\\hakkason\\\\VirtuPet\\\\src\\\\pages\\\\veiw.jsx\";\nimport React, { useState } from 'react';\nimport './view.css'; // CSSファイルをインポート\n\nconst View = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [animalSize, setAnimalSize] = useState(1.0);\n  const [feedbackMessage, setFeedbackMessage] = useState('');\n\n  // 動物の設定をサーバーに送信する関数\n  const updateAnimalSettings = async settings => {\n    try {\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setFeedbackMessage(`設定を更新しました: ${JSON.stringify(result.settings)}`);\n        console.log(\"設定がサーバーに送信されました:\", result.settings);\n      } else {\n        // エラーハンドリング\n      }\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\nexport default View;","map":{"version":3,"names":["React","useState","View","isVisible","setIsVisible","animalSize","setAnimalSize","feedbackMessage","setFeedbackMessage","updateAnimalSettings","settings","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/nazuk/Documents/sumapuro/hakkason/VirtuPet/src/pages/veiw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './view.css'; // CSSファイルをインポート\r\n\r\nconst View = () => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [animalSize, setAnimalSize] = useState(1.0);\r\n  const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n  // 動物の設定をサーバーに送信する関数\r\n  const updateAnimalSettings = async (settings) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(settings)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setFeedbackMessage(`設定を更新しました: ${JSON.stringify(result.settings)}`);\r\n        console.log(\"設定がサーバーに送信されました:\", result.settings);\r\n      } else {\r\n        // エラーハンドリング\r\n      }\r\n    } catch (error) {\r\n      // エラーハンドリング\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-screen\">\r\n      <div className=\"game-screen\">\r\n        {/* ゲーム画面のコンテンツをここに追加 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY,CAAC,CAAC;;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMQ,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpCZ,kBAAkB,CAAC,cAAcQ,IAAI,CAACC,SAAS,CAACE,MAAM,CAACT,QAAQ,CAAC,EAAE,CAAC;QACnEW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAACT,QAAQ,CAAC;MAClD,CAAC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd;IAAA;EAEJ,CAAC;EAED,oBACEvB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5B/B,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEvB,CACF,CAAC;AAEV,CAAC;AAED,eAAe7B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}