{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkota\\\\project_k\\\\hackthon\\\\Web\\\\hackthon2024_11_30\\\\VirtuPet\\\\src\\\\pages\\\\home.jsx\";\nimport React, { useState } from 'react';\nimport '../animation/css/animal.css';\nconst Home = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [animalSize, setAnimalSize] = useState(1.0); // 画像の大きさを管理するステート\n\n  // 動物の表示設定をサーバーに送信する関数\n  const updateAnimalSettings = async () => {\n    const response = await fetch('http://localhost:5000/set_animal_settings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        is_visible: isVisible,\n        size: animalSize\n      })\n    });\n    const result = await response.json();\n    console.log(result.status, result.settings); // サーバーからのレスポンスをログに出力\n  };\n\n  // チェックボックスの変更を処理\n  const handleVisibilityChange = e => {\n    setIsVisible(e.target.checked);\n    updateAnimalSettings(); // 表示状態をサーバーに即時送信\n  };\n\n  // 画像サイズの変更を処理\n  const handleSizeChange = e => {\n    setAnimalSize(e.target.value);\n    updateAnimalSettings(); // サイズの変更をサーバーに送信\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"\\u30DB\\u30FC\\u30E0\\u30DA\\u30FC\\u30B8\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"\\u8868\\u793A\\u3059\\u308B:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isVisible,\n    onChange: handleVisibilityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"\\u753B\\u50CF\\u306E\\u5927\\u304D\\u3055:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0.5\",\n    max: \"3.0\",\n    step: \"0.1\",\n    value: animalSize,\n    onChange: handleSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","Home","isVisible","setIsVisible","animalSize","setAnimalSize","updateAnimalSettings","response","fetch","method","headers","body","JSON","stringify","is_visible","size","result","json","console","log","status","settings","handleVisibilityChange","e","target","checked","handleSizeChange","value","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","step"],"sources":["C:/Users/tkota/project_k/hackthon/Web/hackthon2024_11_30/VirtuPet/src/pages/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../animation/css/animal.css';\r\n\r\nconst Home = () => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [animalSize, setAnimalSize] = useState(1.0);  // 画像の大きさを管理するステート\r\n\r\n  // 動物の表示設定をサーバーに送信する関数\r\n  const updateAnimalSettings = async () => {\r\n    const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ is_visible: isVisible, size: animalSize })\r\n    });\r\n\r\n    const result = await response.json();\r\n    console.log(result.status, result.settings);  // サーバーからのレスポンスをログに出力\r\n  };\r\n\r\n  // チェックボックスの変更を処理\r\n  const handleVisibilityChange = (e) => {\r\n    setIsVisible(e.target.checked);\r\n    updateAnimalSettings();  // 表示状態をサーバーに即時送信\r\n  };\r\n\r\n  // 画像サイズの変更を処理\r\n  const handleSizeChange = (e) => {\r\n    setAnimalSize(e.target.value);\r\n    updateAnimalSettings();  // サイズの変更をサーバーに送信\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>ホームページ</h1>\r\n      <label>\r\n        表示する:\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={isVisible} \r\n          onChange={handleVisibilityChange} \r\n        />\r\n      </label>\r\n      <div>\r\n        <label>\r\n          画像の大きさ:\r\n          <input \r\n            type=\"number\" \r\n            min=\"0.5\" \r\n            max=\"3.0\" \r\n            step=\"0.1\" \r\n            value={animalSize} \r\n            onChange={handleSizeChange} \r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAEpC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAE;;EAEpD;EACA,MAAMM,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,UAAU,EAAEZ,SAAS;QAAEa,IAAI,EAAEX;MAAW,CAAC;IAClE,CAAC,CAAC;IAEF,MAAMY,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,MAAM,EAAEJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAE;EAChD,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAIC,CAAC,IAAK;IACpCpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAC9BnB,oBAAoB,CAAC,CAAC,CAAC,CAAE;EAC3B,CAAC;;EAED;EACA,MAAMoB,gBAAgB,GAAIH,CAAC,IAAK;IAC9BlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC;IAC7BrB,oBAAoB,CAAC,CAAC,CAAC,CAAE;EAC3B,CAAC;EAED,oBACEP,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnC,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,sCAAU,CAAC,eACfnC,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,2BAEL,eAAAnC,KAAA,CAAA6B,aAAA;IACEO,IAAI,EAAC,UAAU;IACfV,OAAO,EAAEvB,SAAU;IACnBkC,QAAQ,EAAEd,sBAAuB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACI,CAAC,eACRnC,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnC,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,uCAEL,eAAAnC,KAAA,CAAA6B,aAAA;IACEO,IAAI,EAAC,QAAQ;IACbE,GAAG,EAAC,KAAK;IACTC,GAAG,EAAC,KAAK;IACTC,IAAI,EAAC,KAAK;IACVZ,KAAK,EAAEvB,UAAW;IAClBgC,QAAQ,EAAEV,gBAAiB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CACI,CACJ,CACF,CAAC;AAEV,CAAC;AAED,eAAejC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}