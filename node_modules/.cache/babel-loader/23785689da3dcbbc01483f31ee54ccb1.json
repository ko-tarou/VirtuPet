{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazuk\\\\Documents\\\\sumapuro\\\\hakkason\\\\VirtuPet\\\\src\\\\pages\\\\veiw.jsx\";\nimport React, { useState } from 'react';\nimport './view.css'; // CSSファイルをインポート\n\nconst View = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [animalSize, setAnimalSize] = useState(1.0);\n  const [feedbackMessage, setFeedbackMessage] = useState('');\n  const handleVisibilityChange = e => {\n    setIsVisible(e.target.checked);\n  };\n  const handleSizeChange = e => {\n    setAnimalSize(parseFloat(e.target.value));\n  };\n\n  // 動物の設定をサーバーに送信する関数\n  const updateAnimalSettings = async settings => {\n    try {\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setFeedbackMessage(`設定を更新しました: ${JSON.stringify(result.settings)}`);\n        console.log(\"設定がサーバーに送信されました:\", result.settings);\n      } else {\n        // エラーハンドリング\n      }\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"\\u8868\\u793A\\u3059\\u308B:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isVisible,\n    onChange: handleVisibilityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"\\u753B\\u50CF\\u306E\\u5927\\u304D\\u3055:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0.5\",\n    max: \"3.0\",\n    step: \"0.1\",\n    value: animalSize,\n    onChange: handleSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${animalSize * 100}px`,\n      height: `${animalSize * 100}px`,\n      backgroundImage: 'url(/path/to/animal.png)',\n      // プレビュー画像のパスを指定\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      display: isVisible ? 'block' : 'none',\n      marginTop: '20px',\n      border: '1px solid #ccc' // プレビュー枠の視認性向上\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\nexport default View;","map":{"version":3,"names":["React","useState","View","isVisible","setIsVisible","animalSize","setAnimalSize","feedbackMessage","setFeedbackMessage","handleVisibilityChange","e","target","checked","handleSizeChange","parseFloat","value","updateAnimalSettings","settings","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","step","style","width","height","backgroundImage","backgroundSize","backgroundRepeat","display","marginTop","border"],"sources":["C:/Users/nazuk/Documents/sumapuro/hakkason/VirtuPet/src/pages/veiw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './view.css'; // CSSファイルをインポート\r\n\r\nconst View = () => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [animalSize, setAnimalSize] = useState(1.0);\r\n  const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n  const handleVisibilityChange = (e) => {\r\n    setIsVisible(e.target.checked);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setAnimalSize(parseFloat(e.target.value));\r\n  };\r\n\r\n  // 動物の設定をサーバーに送信する関数\r\n  const updateAnimalSettings = async (settings) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(settings)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setFeedbackMessage(`設定を更新しました: ${JSON.stringify(result.settings)}`);\r\n        console.log(\"設定がサーバーに送信されました:\", result.settings);\r\n      } else {\r\n        // エラーハンドリング\r\n      }\r\n    } catch (error) {\r\n      // エラーハンドリング\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"settings\">\r\n        <label>\r\n          表示する:\r\n          <input \r\n            type=\"checkbox\" \r\n            checked={isVisible} \r\n            onChange={handleVisibilityChange} \r\n          />\r\n        </label>\r\n        <div>\r\n          <label>\r\n            画像の大きさ:\r\n            <input \r\n              type=\"number\" \r\n              min=\"0.5\" \r\n              max=\"3.0\" \r\n              step=\"0.1\" \r\n              value={animalSize} \r\n              onChange={handleSizeChange} \r\n            />\r\n          </label>\r\n        </div>\r\n        \r\n        {/* プレビュー用の動物画像 */}\r\n        <div \r\n          style={{\r\n            width: `${animalSize * 100}px`,\r\n            height: `${animalSize * 100}px`,\r\n            backgroundImage: 'url(/path/to/animal.png)', // プレビュー画像のパスを指定\r\n            backgroundSize: 'contain',\r\n            backgroundRepeat: 'no-repeat',\r\n            display: isVisible ? 'block' : 'none',\r\n            marginTop: '20px',\r\n            border: '1px solid #ccc' // プレビュー枠の視認性向上\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"game-screen\">\r\n        {/* ゲーム画面のコンテンツをここに追加 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}