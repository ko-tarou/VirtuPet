{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkota\\\\project_k\\\\hackthon\\\\Web\\\\hackthon2024_11_30\\\\VirtuPet\\\\src\\\\pages\\\\home.jsx\";\nimport React, { useState } from 'react';\n// import '../animation/css/animal.css';\n\nconst Home = () => {\n  const [animalSize, setAnimalSize] = useState(1.0); // 動物の大きさ\n  const [isVisible, setIsVisible] = useState(true); // 動物を表示するかどうか\n\n  const changeWallpaper = async () => {\n    const response = await fetch('http://localhost:5000/change_wallpaper', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        image_path: 'path_to_new_image.jpg'\n      })\n    });\n    const result = await response.json();\n    console.log(result.message);\n  };\n\n  // 動物の設定をサーバーに送信する関数\n  const updateAnimalSettings = async () => {\n    const response = await fetch('http://localhost:5000/set_animal_settings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        size: animalSize,\n        is_visible: isVisible\n      })\n    });\n    const result = await response.json();\n    console.log(result.status, result.settings);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"\\u30DB\\u30FC\\u30E0\\u30DA\\u30FC\\u30B8\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeWallpaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\u58C1\\u7D19\\u3092\\u5909\\u66F4\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/kani.png\",\n    alt: \"Animal\",\n    className: \"animal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\u52D5\\u7269\\u306E\\u8A2D\\u5B9A\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\u5927\\u304D\\u3055:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0.5\",\n    max: \"2.0\",\n    step: \"0.1\",\n    value: animalSize,\n    onChange: e => setAnimalSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, animalSize), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"\\u8868\\u793A\\u3059\\u308B:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isVisible,\n    onChange: e => setIsVisible(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateAnimalSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"\\u52D5\\u7269\\u306E\\u8A2D\\u5B9A\\u3092\\u66F4\\u65B0\")));\n};\nexport default Home;","map":{"version":3,"names":["React","useState","Home","animalSize","setAnimalSize","isVisible","setIsVisible","changeWallpaper","response","fetch","method","headers","body","JSON","stringify","image_path","result","json","console","log","message","updateAnimalSettings","size","is_visible","status","settings","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","className","type","min","max","step","value","onChange","e","target","checked"],"sources":["C:/Users/tkota/project_k/hackthon/Web/hackthon2024_11_30/VirtuPet/src/pages/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import '../animation/css/animal.css';\r\n\r\nconst Home = () => {\r\n  const [animalSize, setAnimalSize] = useState(1.0);  // 動物の大きさ\r\n  const [isVisible, setIsVisible] = useState(true);   // 動物を表示するかどうか\r\n\r\n  const changeWallpaper = async () => {\r\n    const response = await fetch('http://localhost:5000/change_wallpaper', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ image_path: 'path_to_new_image.jpg' })\r\n    });\r\n\r\n    const result = await response.json();\r\n    console.log(result.message);\r\n  };\r\n\r\n  // 動物の設定をサーバーに送信する関数\r\n  const updateAnimalSettings = async () => {\r\n    const response = await fetch('http://localhost:5000/set_animal_settings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ size: animalSize, is_visible: isVisible })\r\n    });\r\n\r\n    const result = await response.json();\r\n    console.log(result.status, result.settings);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>ホームページ</h1>\r\n      <button onClick={changeWallpaper}>壁紙を変更</button>\r\n      <img src=\"/kani.png\" alt=\"Animal\" className=\"animal\" />\r\n\r\n      <div>\r\n        <h2>動物の設定</h2>\r\n        <label>\r\n          大きさ:\r\n          <input \r\n            type=\"range\" \r\n            min=\"0.5\" \r\n            max=\"2.0\" \r\n            step=\"0.1\" \r\n            value={animalSize} \r\n            onChange={(e) => setAnimalSize(e.target.value)} \r\n          />\r\n        </label>\r\n        <span>{animalSize}</span>\r\n        <br />\r\n        <label>\r\n          表示する:\r\n          <input \r\n            type=\"checkbox\" \r\n            checked={isVisible} \r\n            onChange={(e) => setIsVisible(e.target.checked)} \r\n          />\r\n        </label>\r\n        <br />\r\n        <button onClick={updateAnimalSettings}>動物の設定を更新</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}